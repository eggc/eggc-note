* 実行
go run hoge.go  でプログラムを実行できる。開発時はこれを使う。
emacs の場合は M-x go-run でプログラムを実行できる。
結局これで足りる気がする。

* 他の実行方法
ファイルを作らずに go の動きを確かめる方法としては [[https://play.golang.org/][go playground]] がある。

[[https://github.com/grafov/go-playground][emacs バージョン]]もある。go-playground で最も簡単なテンプレートがある状態で playground モードを起動する。C-RET でプログラムを実行する。

実はこのモード、実行するときに暗黙的にファイルを保存しているので、削除したい場合は手動で削除しなければならない。なのでたいして便利ではないと思う。

より便利なツールとしては go で REPL を実装した [[https://github.com/motemen/gore][gore]] がある。一行ずつ試しながら結果を見れるので、よくしらないパッケージを試すのに都合が良さそうに見える。しかし、スクリプト言語と比べるとレスポンスはかなり悪い。一行書くたびに3秒くらい待たされるので、これもほとんど役に立たない。

* go get

#+begin_src sh
go get github.com/motemen/gore/cmd/gore
#+end_src

のような感じで使う。このコマンドは ~$GOPATH~ の下に、引数で指示したツールをインストールする。普通は $GOPATH にパスを通しているはずなので、インストールしたツールは、すぐにターミナルから呼び出せるようになる。
